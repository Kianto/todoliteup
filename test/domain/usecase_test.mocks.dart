// Mocks generated by Mockito 5.2.0 from annotations
// in todoliteup/test/domain/usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i2;
import 'package:todoliteup/data/datasources/data_source.dart' as _i3;
import 'package:todoliteup/models/entity.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource<T extends _i1.Entity> extends _i2.Mock
    implements _i3.LocalDataSource<T> {
  MockLocalDataSource() {
    _i2.throwOnMissingStub(this);
  }

  @override
  _i4.Future<int> saveData(T? data) =>
      (super.noSuchMethod(Invocation.method(#saveData, [data]),
          returnValue: Future<int>.value(0)) as _i4.Future<int>);
  @override
  _i4.Future<bool> deleteData(int? id) =>
      (super.noSuchMethod(Invocation.method(#deleteData, [id]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<bool> updateData(int? id, T? data) =>
      (super.noSuchMethod(Invocation.method(#updateData, [id, data]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<List<T>> getList() =>
      (super.noSuchMethod(Invocation.method(#getList, []),
          returnValue: Future<List<T>>.value(<T>[])) as _i4.Future<List<T>>);
  @override
  _i4.Future<List<T>> getListBy(String? key, dynamic value) =>
      (super.noSuchMethod(Invocation.method(#getListBy, [key, value]),
          returnValue: Future<List<T>>.value(<T>[])) as _i4.Future<List<T>>);
  @override
  _i4.Future<T?> getDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getDetail, [id]),
          returnValue: Future<T?>.value()) as _i4.Future<T?>);
}
