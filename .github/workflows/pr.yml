name: pr

on:
  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize, edited]
jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
        with:
          main-branch-name: "main"

      - name: Setup github token
        run: |
          git config --global url."https://${{ secrets.READONLY_GITHUB_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
          git config --global url."https://${{ secrets.READONLY_GITHUB_TOKEN }}:x-oauth-basic@github.com/".insteadOf "git@github.com:"

      - name: Setup flutter environment
        uses: ./.github/actions/setup-flutter

      - name: Use yarn cache
        uses: ./.github/actions/cache-yarn

      - name: Install yarn
        run: yarn install

      - name: Run Analyze & Format
        run: |
          yarn nx affected:lint

  test:
    name: test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
        with:
          main-branch-name: "main"

      - name: Setup github token
        run: |
          git config --global url."https://${{ secrets.READONLY_GITHUB_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
          git config --global url."https://${{ secrets.READONLY_GITHUB_TOKEN }}:x-oauth-basic@github.com/".insteadOf "git@github.com:"

      - name: Setup flutter environment
        uses: ./.github/actions/setup-flutter

      - name: Use yarn cache
        uses: ./.github/actions/cache-yarn

      - name: Install yarn
        run: yarn install

      - name: Use codecov cache
        uses: ./.github/actions/cache-codecov

      - name: Install tools path and codecov
        if: steps.codecov-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p "~/.local/bin"
          export PATH="$PATH":"~/.local/bin"
          echo "~/.local/bin" >> GITHUB_PATH
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          cp codecov "~/.local/bin/codecov"

      - name: Run Test
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          yarn nx affected:test --args='--coverage=1'
